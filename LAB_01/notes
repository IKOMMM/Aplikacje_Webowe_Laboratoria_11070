/*
ZAŁOŻENIE PROJEKU
MIN
1. ✅  Utwórz html z statycznymi 4 inputami tekstowymi typu number
2. ❌ Poniżej inputów wyświetl ich sumę, średnią, min, max - wartości powinny się aktualizować po każdej zmianie(można korzystać ze zdarzenia input lub change w polu input)

ROZSZERZENIE PROJEKTU
3. ❌Zamień aplikację na inputy generowane dynamicznie. Liczba generowanych inputów jest pobierana z dodatkowego pola input
4. ❌Wyświetlaj ikone oczekiwania zamiast wyników jeśli aktualnie wprowadzana warość jest nieprawidłowa(lub akutalizuj po wyjściu z pola tekstowego)
5. ❌Dodaj możliwość dynamiczneog usuwania wybranych pól teksotwych (jednego lub wielu na raz)
6. ❌Dodaj klasy - przerób kod na obiektowy
*/


/*
class StatApp{    

    let button = document.querySelector("button");
    let input1 = document.getElementById("number_1")! as HTMLInputElement;
    let input2 = document.getElementById("number_2")! as HTMLInputElement;
    let input3 = document.getElementById("number_3")! as HTMLInputElement;
    
    containerDOMElement : Element;     
    
    ui: UI;
    statystyka: Statystyka;

    //Pobiera container z idex, sprawdza czy jest, jak jest to śmiga.
    constructor(containerDOMElement: Element = undefined) {
        
        if(!containerDOMElement){
            throw new Error('Podaj pojemnik dla programu StartApp');
        }
        this.containerDOMElement = containerDOMElement;    
        this.startApp();   
    }

    startApp(): void{ 


        
        this.ui = new UI(this.containerDOMElement);
        this.statystyka = new Statystyka();
        
    }

    add(number_1: number, number_2: number, number_3: number, number_4: number){
        return number_1 + number_2 + number_3 + number_4;
    }    
}

const statApp = new StatApp(document.body);


Do dalszego testowania i rozbudowywania projektu - rozbij projekt na klasy odpowiedzialne za UI i Liczenie
    //klasa odpowiada za wyświetlanie UI

}
class Statystyka{
    //klasa odpowiada za liczenie
}
*/